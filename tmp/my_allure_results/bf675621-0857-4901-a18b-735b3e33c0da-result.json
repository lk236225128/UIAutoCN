{"name": "test_publish", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"//www.8891.com.tw/seles-moto.html\">...</a> is not clickable at point (395, 239). Other element would receive the click: <div class=\"mask\" style=\"display: block;\"></div>\n  (Session info: chrome=75.0.3770.100)\n  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Mac OS X 10.12.6 x86_64)", "trace": "self = <test_pytest.TestSeller object at 0x107f36b70>\ngetDriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a9d0148d079169e6f362b28ca486005d\")>\n\n    @allure.story('刊登机车')\n    def test_publish(self, getDriver):\n        app = {\"driver\": getDriver,\n               \"path\": PATH(\"./Yamls/Web/Seller/PublishMotor.yaml\")}\n        page = BasePage(app)\n>       page.operate()\n\ntests/test_case/test_pytest.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPageObject/Web/HomePage/BasePage.py:13: in operate\n    self.page.operate()\nPageObject/WebPages.py:45: in operate\n    result = self.operateElement.operate(item, self.testInfo)\nBase/WebBaseOperate.py:41: in operate\n    return self.operate_by(operate, testInfo)\nBase/WebBaseOperate.py:73: in operate_by\n    return elements[operate.get(\"operate_type\")]()\nBase/WebBaseOperate.py:51: in <lambda>\n    be.CLICK: lambda: self.click(operate),\nBase/WebBaseOperate.py:92: in click\n    self.elements_by(operate).click()\n../../.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/webelement.py:633: in _execute\n    return self._parent.execute(command, params)\n../../.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107f0bdd8>\nresponse = {'sessionId': 'a9d0148d079169e6f362b28ca486005d', 'status': 64, 'value': {'message': 'element click intercepted: Eleme...4.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Mac OS X 10.12.6 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"//www.8891.com.tw/seles-moto.html\">...</a> is not clickable at point (395, 239). Other element would receive the click: <div class=\"mask\" style=\"display: block;\"></div>\nE         (Session info: chrome=75.0.3770.100)\nE         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Mac OS X 10.12.6 x86_64)\n\n../../.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py:242: ElementClickInterceptedException"}, "steps": [{"name": "单击", "status": "passed", "parameters": [{"name": "operate", "value": "{'element_info': '#myaccount > li > dl > dt > a:nth-child(1)', 'find_type': 'css', 'operate_type': 'click', 'info': '點擊會員中心'}"}], "start": 1562229226278, "stop": 1562229229504}, {"name": "单击", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"//www.8891.com.tw/seles-moto.html\">...</a> is not clickable at point (395, 239). Other element would receive the click: <div class=\"mask\" style=\"display: block;\"></div>\n  (Session info: chrome=75.0.3770.100)\n  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Mac OS X 10.12.6 x86_64)\n\n", "trace": "  File \"/Users/luokai/.virtualenvs/UIautocn/lib/python3.6/site-packages/allure_commons/_allure.py\", line 153, in impl\n    return func(*a, **kw)\n  File \"/Users/luokai/PycharmProjects/UIautocn/Base/WebBaseOperate.py\", line 92, in click\n    self.elements_by(operate).click()\n  File \"/Users/luokai/.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/luokai/.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"/Users/luokai/.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/luokai/.virtualenvs/UIautocn/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "operate", "value": "{'element_info': '#nmc-side-bar > div:nth-child(1) > ul > li:nth-child(2) > a', 'find_type': 'css', 'operate_type': 'click', 'info': '點擊刊登機車廣告'}"}], "start": 1562229229530, "stop": 1562229229575}], "start": 1562229226233, "stop": 1562229229579, "uuid": "6c9ad640-5e16-4fb0-8a2c-a5cbaca42352", "historyId": "6d076e34a0ab9f0f3f3283a2efe4b5d5", "fullName": "tests.test_case.test_pytest.TestSeller#test_publish", "labels": [{"name": "feature", "value": "车商业务"}, {"name": "story", "value": "刊登机车"}, {"name": "parentSuite", "value": "tests.test_case"}, {"name": "suite", "value": "test_pytest"}, {"name": "subSuite", "value": "TestSeller"}, {"name": "host", "value": "luokaideMacBook-Pro.local"}, {"name": "thread", "value": "57192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_case.test_pytest"}]}